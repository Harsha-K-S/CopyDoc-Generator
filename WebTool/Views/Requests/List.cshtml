@model WebTool.RequestCollection
@inject Microsoft.AspNetCore.Identity.IUserStore<ApplicationUser> UserStore
@{
    ViewData["Title"] = "Requests";
}

<a href="/Index" class="btn btn-primary my-3">Back</a>

<table id="requestsTable" class="table">
    <thead>
        <tr>
            <th>
                <div>Task Reference ID</div>
                <div><input type="text" class="table-filter-input" /></div>
            </th>
            <th>
                <div>URL</div>
                <div><input type="text" class="table-filter-input" /></div>
            </th>
            <th>
                <div>Publish URL</div>
                <div><input type="text" class="table-filter-input" /></div>
            </th>
            <th>
                <div>Developer Name</div>
                <div><input type="text" class="table-filter-input" /></div>
            </th>
            <th>
                <div>Time of Submit</div>
                <div><input type="text" class="table-filter-input" /></div>
            </th>
            <th>
                <div>Status</div>
                <div><input type="text" class="table-filter-input" /></div>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Any())
        {
            @foreach (Request request in Model)
            {
                ApplicationUser author = await UserStore.FindByIdAsync(request.AuthorId, System.Threading.CancellationToken.None);
                <tr>
                    <td style="font-weight:bold">@request.TaskReferenceId</td>
                    <td>@request.Url</td>
                    <td>
                        @if (request.AuthorId == User.GetUserId())
                        {
                            <a asp-controller="Requests" asp-action="Get" asp-route-autoGeneratedId="@request.AutoGeneratedId">
                                @Url.ActionLink("Get", "Requests", new { request.AutoGeneratedId })
                            </a>
                        }
                        else
                        {
                            @Url.ActionLink("Get", "Requests", new { request.AutoGeneratedId })
                        }
                    </td>
                    <td>@request.DeveloperName</td>
                    <td>@request.TimeOfSubmit?.ToString("yyyy-MM-dd hh:mm")</td>
                    <td>
                        @switch (request.Status)
                        {
                            case RequestStatus.PMInProgress:
                                <span>@(author?.Role == "Admin" ? "Admin InProgress" : "PM InProgress")</span>
                                break;
                            case RequestStatus.PMCompleted:
                                <span>@(author?.Role == "Admin" ? "Admin Completed" : "PM Completed")</span>
                                break;
                            case RequestStatus.DevInProgress:
                                <span>Dev InProgress</span>
                                break;
                            case RequestStatus.DevCompleted:
                                <span>Dev Completed</span>
                                break;
                        }
                    </td>
                    <td>
                        @if (request.AuthorId == User.GetUserId() && request.Status == RequestStatus.DevCompleted)
                        {
                            <a id="btn-complete" class="btn btn-primary"
                                asp-action="CompleteByManager"
                                asp-route-autogeneratedId="@request.AutoGeneratedId">Complete</a>
                        }
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan=6>No request found</td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        $(document).ready(function ($) {
            $('.table-filter-input').on('keyup', function () {
                const filterTexts = $('.table-filter-input').map((i, el) => $(el).val()).toArray();
                const rows = $('#requestsTable tbody').find('tr');
                rows.show();
                rows.filter((index, item) => {
                    for (let i = 0; i < filterTexts.length; i++) {
                        const filterText = filterTexts[i];
                        const tdText = $(item).find('td').eq(i).text();
                        if (filterText !== '' && tdText.toUpperCase().indexOf(filterText.toUpperCase()) == -1) {
                            return true;
                        }
                    }
                    return false;
                }).hide();
            });
        });
    </script>
}