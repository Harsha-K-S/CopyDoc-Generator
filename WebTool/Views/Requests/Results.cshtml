@using System.Web;
@model ResultsViewModel

@{
    ViewData["Title"] = "Results";
}

@if (User.IsInRole("Manager") || User.IsInRole("Admin"))
{
    <div class="overflow-hidden">
        <a href="/Index" class="btn btn-primary">Back</a>
        @if (Model.Request.Status == RequestStatus.PMInProgress)
        {
            <button id="btn-save-as-draft" class="btn btn-primary ml-1"
                    onclick="return saveAsDraft('@Model.Request.AutoGeneratedId', '@Model.Request.TaskReferenceId', '@Model.Request.Url')">
                Save as Draft
            </button>
            <div style="position: fixed; top: 75px; right: 10px; background-color: silver; padding: 10px; border: 1px solid gray; border-radius: 5px;">
                <input type="checkbox" onchange="document.getElementById('btn-publish').style.display = this.checked ? 'inline' : 'none';" />
                <label class="fw-bold">I have done all changes</label>
                <a id="btn-publish" class="btn btn-primary ml-1" style="display:none"
           asp-action="Publish"
           asp-route-autogeneratedId="@Model.Request.AutoGeneratedId"
           asp-route-taskReferenceId="@Model.Request.TaskReferenceId"
           asp-route-url="@Model.Request.Url">Publish</a>
            </div>
        }
    </div>
}

@if (User.IsInRole("Developer") && Model.Request.Status == RequestStatus.DevInProgress)
{
    <div style="position: fixed; top: 75px; right: 10px; background-color: silver; padding: 10px; border: 1px solid gray; border-radius: 5px;">
        <input type="checkbox" onchange="document.getElementById('btn-submit').style.display = this.checked ? 'inline' : 'none';" />
        <label>I have done all changes</label>
        <a id="btn-submit" class="btn btn-primary ml-1" style="display:none" asp-action="Complete" asp-route-autogeneratedId="@Model.Request.AutoGeneratedId">Submit</a>
    </div>
}

<a href="javascript:void(0)" onclick="return goToPeviousChange();" title="Previous Change" class="btn-previous-change">
    <i class="fa-sharp fa-solid fa-circle-up"></i>
</a>
<a href="javascript:void(0)" onclick="return goToNextChange();" title="Next Change" class="btn-next-change">
    <i class="fa-sharp fa-solid fa-circle-down"></i>
</a>

<div class="mt-2">
    <h5>Task Reference ID: @Model.Request.TaskReferenceId</h5>
    <h5>URL: <a href=@Model.Request.Url target="_blank">@Model.Request.Url</a></h5>
</div>

<input type="hidden" id="url" value="@Model.Request.Url" />
<input type="hidden" id="taskReferenceId" value="@Model.Request.TaskReferenceId" />
<input type="hidden" id="autoGeneratedId" value="@Model.Request.AutoGeneratedId" />
<input type="hidden" id="requestStatus" value="@Model.Request.Status" />

<table id="elementsTable" class="table mt-4">
    <tbody>
        @foreach (HtmlContainer container in Model.Containers.Where(c => c is HtmlSeoSection))
        {
            @await Component.InvokeAsync("HtmlContainer", new HtmlContainerViewComponentModel(container, null))
        }
        <tr>
            <td colspan="4" class="p-0">
                <h3 class="display-8 mt-3">Elements</h3>
                <div>
                    <select id="tagSelector" class="form-select">
                        <option value="">Please Select</option>
                        @foreach (HtmlContainer element in Model.Containers.SkipWhile(c => c is HtmlSeoSection))
                        {
                            <option value=@element.Id>@element.Title</option>
                        }
                    </select>
                </div>
            </td>
        </tr>
        @foreach (HtmlContainer container in Model.Containers.SkipWhile(c => c is HtmlSeoSection))
        {
            @await Component.InvokeAsync("HtmlContainer", new HtmlContainerViewComponentModel(container, null))
        }
    </tbody>
</table>

@section Scripts {
    @if (User.IsInRole("Admin"))
    {
        <script>window.userRole = 'Admin';</script>
    }
    else if (User.IsInRole("Manager"))
    {
        <script>window.userRole = 'Manager';</script>
    }
    else if (@User.IsInRole("Developer"))
    {
        <script>window.userRole = 'Developer';</script>
    }
    <script>
        $(document).ready(function ($) {
            reAttachButtons();
            displayHistory();
            $('#tagSelector').change(function () {
                var selection = $(this).val();
                var dataset = $('#elementsTable tbody').find('tr');
                dataset.show();
                if (selection !== '') {
                    dataset.filter(function (index, item) {
                        return $(item).data('container-id') != selection;
                    }).hide();
                }
            });
        });
    </script>
}