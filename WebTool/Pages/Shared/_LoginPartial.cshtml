@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> userManager

<ul class="navbar-nav">
    <li class="nav-item text-start">
        <a href="/Index" class="nav-link">
            Content Management System
        </a>
    </li>
    @{
        bool isIndex = new string[] { "/", "/Index" }.IgContains(ViewContext.HttpContext.Request.Path);
    }
    @if (SignInManager.IsSignedIn(User))
    {
        @if ((User.IsInRole("Manager") || User.IsInRole("Admin")) && !isIndex)
        {
            <a class="nav-link" asp-controller="Requests" asp-action="Create">Add New Request</a>
            <a class="nav-link" asp-controller="Requests" asp-action="List" asp-route-userId="@User.GetUserId()">View Old Request</a>
        }
        @if (User.IsInRole("Admin") && !isIndex)
        {
            <a class="nav-link" asp-controller="Users" asp-action="Dashboard">User Management</a>
        }
        @if (User.IsInRole("Developer") && !isIndex)
        {
            <a class="nav-link" href="~/IframeLoading/index.html" target="_blank">Lead Testing</a>
        }

        <li class="nav-item">
            <span class="welcome-label">Welcome <b>@User.Identity?.Name</b></span>
            <form class="form-inline d-inline-block" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                <button type="submit" class="nav-link btn btn-link">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>